{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OAEQ,sBAAMC,SAXO,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAI,OAAOP,GAAP,mBAAsBO,OACxCN,EAAc,MAKV,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAIbC,EAJa,iDAImCC,UAAUH,GAJ7C,+DAMAI,MAAMF,GANN,cAMbG,EANa,gBAOIA,EAAKC,OAPT,uBAOXC,EAPW,EAOXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAbvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAc,QAAQC,IAAIN,EAAIC,EAAOV,GAEnB,sBAAKgB,UAAU,2CAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAW,WAEP1B,EAASC,GACJ0B,MAAM,SAAAC,GAECH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAM1B,CAACtB,IAEGuB,EDnBwBK,CAAa5B,GAAhCa,EAFuB,EAE5BN,KAAYe,EAFgB,EAEhBA,QAInB,OACQ,qCACI,oBAAIJ,UAAU,2CAAd,SAA0DlB,IACzDsB,GAAW,mBAAGJ,UAAU,iDAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEYL,EAAOJ,KAAI,SAAAC,GAAG,OAEV,cAAC,EAAD,eAGQA,GADEA,EAAIC,aEjBjCkB,EAAS,WAAM,MAGY3C,mBAAS,IAHrB,mBAGjB4C,EAHiB,KAGL7C,EAHK,KAaxB,OAEI,qCACI,wCACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBAID,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAGCA,SAAYA,GADRA,Y,MC1BzB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d0a1d27.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n       if( inputValue.trim().length > 2 ){\r\n        setCategories(cats  => [ inputValue, ...cats]);\r\n        setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange} />\r\n            </form>\r\n        \r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","export const getGifs = async(category) => {\r\n\r\n        \r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=20&api_key=rEQQqf2hPvgz9VH2FW1OEI0zpBrdGvvi`;\r\n    \r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React,{} from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [images, setImages] = useState([])\r\n   const { data:images,loading} =  useFetchGifs(category);\r\n  \r\n   \r\n\r\n    return (\r\n            <>   \r\n                <h3 className=\"card animate__animated animate__fadeInUp\">{category}</h3>\r\n                {loading && <p className=\"card animate__animated animate__animate__flash\">loading</p>}\r\n                <div className=\"card-grid\">\r\n                        {\r\n                            images.map(img => (\r\n                                \r\n                                <GifGridItem\r\n                                \r\n                                    key={ img.id }\r\n                                    {...img}\r\n                                />\r\n                            ))\r\n                        }\r\n                </div>\r\n            </>  \r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                \r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifApp = () => {\r\n    \r\n    // const categories = ['One Punch', 'Dragon Ball','Shingeki'];\r\n    const [categories, setCategories] = useState([]);\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Shingeki'])}\r\n      \r\n\r\n    \r\n    // const handleDrop =() =>{\r\n    //     setCategories(categories.shift())\r\n    // }\r\n  \r\n    return (\r\n\r\n        <>\r\n            <h2>GifApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            \r\n            <hr />\r\n            \r\n            {/* <button onClick={handleDrop}>Eliminar</button> */}\r\n\r\n           <ol>\r\n               {\r\n                   categories.map(category => (\r\n                    <GifGrid\r\n                    \r\n                    key={category}\r\n                     category = {category} />\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GifApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifApp } from './GifApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifApp></GifApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}